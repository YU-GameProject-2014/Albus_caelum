/**
 * レポートのライフクラス
 */
class RFGLifebar extends RFGObject{
   
    var _life    = 1;
    var _maxlife = 2;
    
    property life
	{
    	setter(val){
	        this._life = val;
			this.update();
			if (this._life <= 0) this.onNoLife();
        }
        
        getter(){
            return _life;
        }
    }

    property maxlife
    {
    	setter(val){
	        this._maxlife = val;
			this.update();
        }
        
        getter(){
            return _maxlife;
        }
    }

    
    function RFGLifebar(wnd, lay, owner) {
		super.RFGObject(wnd, lay, owner);
        this.layer = RFGLifebarLayerCreator.createLifebarLayer(wnd, lay);
    } 
    
	/**
	 * 再描画
	 */
    function update() {
		this.layer.colorRect(0, 0, this.layer.width, this.layer.height, 0, -255);
        this.layer.fillRect(0, 0, this.layer.width, this.layer.height, 0xFFFF0000);
        this.layer.fillRect(0, 0, this.layer.width / this.maxlife * this.life, this.layer.height, 0xFFFFFF00);
    }
	
	/**
	 * ライフがなくなった時のイベント
	 */
	function onNoLife() {
		this.owner.onNoLife();
	}

    function finalize(){
        super.finalize();
        invalidate this.layer;
    }
}