/**
 * レポート妖精ゲームの物体クラスのひな形
 * @author 
 */
class  RFGObject extends RFGBasicObject
{
	var owner;
	var timer;

	/**
	 * 
	 * @param	wnd          ウインドウオブジェクト
	 * @param	lay          親レイヤー
	 * @param	owner = void 管理者
	 */
    function RFGObject(wnd, lay, owner = void) {
	    super.RFGBasicObject(wnd, lay);
	    this.owner = owner;
        this.timer = new Timer(this, "action");//メモリリークの危険性
        this.timer.enabled = false;
		
        this.layer = new RFGLayer(wnd, lay);
		this.layer.width = lay.width;
		this.layer.height = lay.height;
		this.layer.visible = true;

    }
	
	/**
	 * タイマーイベントハンドラ
	 * @param	ev
	 */
	function action(ev){
        
    }
	
	/**
	 * オブジェクトの自殺()
	 */
    function suicide() {
		//自殺前の身辺整理
        this.timer.enabled = false;
        this.enable = 0;
        this.layer.visible = false;
		
		//自殺予告
		this.suicideNotice();
    }
	
	/**
	 * 親に自殺の手伝えと仄めかす
	 * 親に殺してもらう
	 */
	function suicideNotice() {
		this.owner.assistSuicide(this);
	}

	/**
	 * finalize
	 */
    function finalize() {
		super.finalize();
        this.timer.enabled = false;
        invalidate this.timer;
    }
}