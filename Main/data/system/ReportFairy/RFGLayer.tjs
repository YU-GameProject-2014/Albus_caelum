/**
 * レポートの妖精ゲームで扱うレイヤーのひな形(イベント処理を分離して管理オブジェクトに実装をゆだねる)
 * @author gewalt01
 */
class RFGLayer extends RFGBasicLayer 
{
    var owner;//管理者

	/**
	 * コンストラクタ
	 * @param	wnd ウインドウオブジェクト
	 * @param	lay 親レイヤー
	 */
    function RFGLayer(wnd, lay){
        super.Layer(wnd, lay);
    }
	

    /* キー操作はownerオブジェクトに委譲 */
    function onKeyDown(key, shift, process=true){
        if (this.owner === void) return;
        if (typeof this.owner.onKeyDown === 'undefined') return;
        this.owner.onKeyDown(key, shift, process);
    }

    function onKeyUp(key, shift, process=true){
        if (this.owner === void) return;
        if (typeof this.owner.onKeyUp === 'undefined') return;
        this.owner.onKeyUp(key, shift, process);
    }    

    /* マウス操作はownerオブジェクトに委譲 */
    function onMouseEnter(){
        if (this.owner === void) return;
        if (typeof this.owner.onMouseEnter === 'undefined') return;
        this.owner.onMouseEnter();
    }    

    function onClick(x, y){
        if (this.owner === void) return;
        if (typeof this.owner.onClick === 'undefined') return;
        this.owner.onClick(x, y);
    }

	
}